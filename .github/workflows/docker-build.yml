name: Build and Deploy

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up environment variables
        id: env_vars
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "TAG=latest" >> $GITHUB_ENV
            echo "NODE_ENV=production" >> $GITHUB_ENV
          else
            echo "TAG=develop" >> $GITHUB_ENV
            echo "NODE_ENV=development" >> $GITHUB_ENV
          fi
      - name: set up golang mods
        id: go_mods
        run: |
          ln -sf go.mod.remote go.mod
          ln -sf go.sum.remote go.sum

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}
          build-args: |
            NODE_ENV=${{ env.NODE_ENV }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Trigger deployment webhook
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
        run: |
          DEPLOY_URL=${{ secrets.DEPLOY_URL }}
          if [[ -n "$DEPLOY_URL" ]]; then
            curl -sH "webhook-token: ${{ secrets.WEBHOOK_TOKEN }}" $DEPLOY_URL
          fi
